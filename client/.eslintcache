[{"/home/china/code/Hello-World/client/src/index.js":"1","/home/china/code/Hello-World/client/src/screens/LoginScreen.js":"2","/home/china/code/Hello-World/client/src/screens/chat/ChatScreen.js":"3","/home/china/code/Hello-World/client/src/components/NavigationBar.js":"4","/home/china/code/Hello-World/client/src/reportWebVitals.js":"5","/home/china/code/Hello-World/client/src/screens/ProfileScreen.js":"6","/home/china/code/Hello-World/client/src/screens/chat/MessagesPanel.js":"7","/home/china/code/Hello-World/client/src/screens/chat/Message.js":"8"},{"size":327,"mtime":1613118609458,"results":"9","hashOfConfig":"10"},{"size":2731,"mtime":1613118609458,"results":"11","hashOfConfig":"10"},{"size":2791,"mtime":1613118639658,"results":"12","hashOfConfig":"10"},{"size":1904,"mtime":1613118609458,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1612244382640,"results":"14","hashOfConfig":"10"},{"size":277,"mtime":1612690822710,"results":"15","hashOfConfig":"10"},{"size":966,"mtime":1612696539760,"results":"16","hashOfConfig":"10"},{"size":238,"mtime":1612332487113,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ukkg96",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/china/code/Hello-World/client/src/index.js",[],"/home/china/code/Hello-World/client/src/screens/LoginScreen.js",[],"/home/china/code/Hello-World/client/src/screens/chat/ChatScreen.js",["36","37","38","39"],"\nimport { useEffect, useState, useContext } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport { UserContext } from \"../../App\";\nimport ChannelList from './ChannelList'\nimport MessagesPanel from \"./MessagesPanel\";\nimport './chat.scss';\nimport socketClient  from \"socket.io-client\";\nconst SERVER = \"http://localhost:5000\";\nconst socket = socketClient(SERVER);\n\nconst ChatScreen = ()=> {\n    const [channels, setChannels] = useState([])\n    const [channel, setChannel] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [cookies, setCookie] = useCookies(['user']);\n    \n    const loadChannels = async() =>{\n        fetch(SERVER+'/api/chat/channels').then(async response=>{\n            let data = await response.json();\n            console.log(data);\n            setChannels(data.channels)\n        })\n    }\n    const configureSocket = () =>{\n        \n        console.log(\"socket configs running\");\n        socket.on('connection',()=>{\n            console.log(\"connected id\",socket.id);\n        });\n        /* socket.on('channels', channels => {\n            setChannels(channels);\n        }); */\n        socket.on('newMessage',async data=>{\n            let message = await data;\n            setMessages(oldMessages => [...oldMessages, message]);\n            setChannels(data.channels); \n        })\n    }\n    const handleSendMessage = (channel_id, text) => {\n        console.log(channel_id,text);\n        \n        console.log(cookies.user);\n        var body = {\n            userName: cookies.user.username,\n            content: text,\n            channelId: channel_id,\n        } \n        //socket.emit('send-message', { channel_id, text, senderName: socket.id, id: Date.now() });\n        fetch(SERVER+'/api/chat/channels/'+channel_id,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n    const handleChannelSelect = (id) =>{\n        console.log(\"Joined channel\", id);\n        fetch(SERVER+'/api/chat/channels/'+id).then(async response=>{\n            let data = await response.json();\n            setMessages(data.messages);\n            console.log(data.messages);\n            setChannel(id)\n            socket.emit('getChannel',{channelId:id})\n            //setChannels(data.channels)\n        });\n        \n    }\n    useEffect(()=>{\n        loadChannels();\n        configureSocket();\n        console.log(JSON.stringify(cookies));\n    },[])\n    \n    return (\n        <div className=\"chat-app\">\n            <ChannelList channels={channels} onSelectChannel={handleChannelSelect}/>\n            <MessagesPanel onSendMessage={handleSendMessage} messages={messages} channelId={channel}/>\n        </div>\n    )\n}\n\nexport default ChatScreen;",["40","41"],"/home/china/code/Hello-World/client/src/components/NavigationBar.js",[],"/home/china/code/Hello-World/client/src/reportWebVitals.js",[],"/home/china/code/Hello-World/client/src/screens/ProfileScreen.js",["42","43"],"/home/china/code/Hello-World/client/src/screens/chat/MessagesPanel.js",["44"],"/home/china/code/Hello-World/client/src/screens/chat/Message.js",[],{"ruleId":"45","severity":1,"message":"46","line":2,"column":31,"nodeType":"47","messageId":"48","endLine":2,"endColumn":41},{"ruleId":"45","severity":1,"message":"49","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":21},{"ruleId":"45","severity":1,"message":"50","line":16,"column":21,"nodeType":"47","messageId":"48","endLine":16,"endColumn":30},{"ruleId":"51","severity":1,"message":"52","line":74,"column":7,"nodeType":"53","endLine":74,"endColumn":9,"suggestions":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"45","severity":1,"message":"59","line":4,"column":12,"nodeType":"47","messageId":"48","endLine":4,"endColumn":16},{"ruleId":"45","severity":1,"message":"60","line":4,"column":18,"nodeType":"47","messageId":"48","endLine":4,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":15,"column":26,"nodeType":"63","messageId":"64","endLine":15,"endColumn":28},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'UserContext' is defined but never used.","'setCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies'. Either include it or remove the dependency array.","ArrayExpression",["65"],"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"68","fix":"69"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [cookies]",{"range":"70","text":"71"},[2496,2498],"[cookies]"]