[{"/home/china/code/Hello-World/client/src/index.js":"1","/home/china/code/Hello-World/client/src/screens/ProfileScreen.js":"2","/home/china/code/Hello-World/client/src/components/PrivateRoute.js":"3","/home/china/code/Hello-World/client/src/screens/chat/MessagesPanel.js":"4","/home/china/code/Hello-World/client/src/screens/chat/Channel.js":"5","/home/china/code/Hello-World/client/src/screens/HomeScreen.js":"6","/home/china/code/Hello-World/client/src/screens/RegisterScreen.js":"7","/home/china/code/Hello-World/client/src/App.js":"8","/home/china/code/Hello-World/client/src/screens/chat/ChatScreen.js":"9","/home/china/code/Hello-World/client/src/screens/chat/ChannelList.js":"10","/home/china/code/Hello-World/client/src/screens/JoinScreen.js":"11","/home/china/code/Hello-World/client/src/screens/chat/Message.js":"12","/home/china/code/Hello-World/client/src/screens/LoginScreen.js":"13","/home/china/code/Hello-World/client/src/components/NavigationBar.js":"14"},{"size":336,"mtime":1612244382640,"results":"15","hashOfConfig":"16"},{"size":277,"mtime":1612690822710,"results":"17","hashOfConfig":"16"},{"size":370,"mtime":1612244382640,"results":"18","hashOfConfig":"16"},{"size":966,"mtime":1612696539760,"results":"19","hashOfConfig":"16"},{"size":325,"mtime":1612319298850,"results":"20","hashOfConfig":"16"},{"size":125,"mtime":1612690822710,"results":"21","hashOfConfig":"16"},{"size":2390,"mtime":1612690822710,"results":"22","hashOfConfig":"16"},{"size":1344,"mtime":1612869027720,"results":"23","hashOfConfig":"16"},{"size":2792,"mtime":1613115408378,"results":"24","hashOfConfig":"16"},{"size":506,"mtime":1612692290510,"results":"25","hashOfConfig":"16"},{"size":1906,"mtime":1612690822710,"results":"26","hashOfConfig":"16"},{"size":238,"mtime":1612332487113,"results":"27","hashOfConfig":"16"},{"size":2304,"mtime":1612869130250,"results":"28","hashOfConfig":"16"},{"size":1802,"mtime":1612690822710,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"ukkg96",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/china/code/Hello-World/client/src/index.js",[],["64","65"],"/home/china/code/Hello-World/client/src/screens/ProfileScreen.js",["66","67"],"import { useContext } from \"react\";\nimport { UserContext } from \"../App\";\nconst ProfileScreen = ({ history }) => {\n    const [user, setUser] = useContext(UserContext);\n    return (\n      <div>\n        <h1>Profile</h1>\n      </div>\n    );\n  };\n  \n  export default ProfileScreen;",["68","69"],"/home/china/code/Hello-World/client/src/components/PrivateRoute.js",[],"/home/china/code/Hello-World/client/src/screens/chat/MessagesPanel.js",["70"],"import {useState} from \"react\";\nimport Message from './Message';\nconst MessagesPanel = ({onSendMessage, messages, channelId}) => {\n    const [input,setInput] = useState('');\n    let list = <div>There are no messages shown</div>;\n    if (messages) {\n        list = messages.map(m => <Message key={m._id} id={m._id} senderName={m.userName} text={m.content} />);\n    }\n    //console.log(props);\n    const handleInput=(e)=>{\n        setInput(e.target.value);\n    }\n    const send=()=>{\n        console.log(input);\n        if(input && input!=''){\n            onSendMessage(channelId, input);\n            setInput('');\n        }\n    }\n    return(\n        <div className=\"messages-panel\">\n            <div className=\"messages-list\">{list}</div>\n            <div className=\"messages-input\"></div>\n            <input type=\"text\" onChange={handleInput} value={input}/>‍\n            <button onClick={send}>Send</button>‍\n        </div>\n    )\n}\nexport default MessagesPanel;",["71","72"],"/home/china/code/Hello-World/client/src/screens/chat/Channel.js",[],"/home/china/code/Hello-World/client/src/screens/HomeScreen.js",[],"/home/china/code/Hello-World/client/src/screens/RegisterScreen.js",[],"/home/china/code/Hello-World/client/src/App.js",[],"/home/china/code/Hello-World/client/src/screens/chat/ChatScreen.js",["73","74","75","76"],"\nimport { useEffect, useState, useContext } from \"react\";\nimport { useCookies } from 'react-cookie';\nimport { UserContext } from \"../../App\";\nimport ChannelList from './ChannelList'\nimport MessagesPanel from \"./MessagesPanel\";\nimport './chat.scss';\nimport socketClient  from \"socket.io-client\";\nconst SERVER = \"http://localhost:5000\";\nconst socket = socketClient(SERVER);\n\nconst ChatScreen = ()=> {\n    const [channels, setChannels] = useState([])\n    const [channel, setChannel] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [cookies, setCookie] = useCookies(['user']);\n    \n    const loadChannels = async() =>{\n        fetch(SERVER+'/api/chat/channels').then(async response=>{\n            let data = await response.json();\n            console.log(data);\n            setChannels(data.channels)\n        })\n    }\n    const configureSocket = () =>{\n        \n        console.log(\"socket configs running\");\n        socket.on('connection',()=>{\n            console.log(\"connected id\",socket.id);\n        });\n        /* socket.on('channels', channels => {\n            setChannels(channels);\n        }); */\n        socket.on('newMessage',async data=>{\n            let message = await data;\n            setMessages(oldMessages => [...oldMessages, message]);\n            //setChannels(channelsList); \n        })\n    }\n    const handleSendMessage = (channel_id, text) => {\n        console.log(channel_id,text);\n        \n        console.log(cookies.user);\n        var body = {\n            userName: cookies.user.username,\n            content: text,\n            channelId: channel_id,\n        } \n        //socket.emit('send-message', { channel_id, text, senderName: socket.id, id: Date.now() });\n        fetch(SERVER+'/api/chat/channels/'+channel_id,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(body)\n        });\n    }\n    const handleChannelSelect = (id) =>{\n        console.log(\"Joined channel\", id);\n        fetch(SERVER+'/api/chat/channels/'+id).then(async response=>{\n            let data = await response.json();\n            setMessages(data.messages);\n            console.log(data.messages);\n            setChannel(id)\n            socket.emit('getChannel',{channelId:id})\n            //setChannels(data.channels)\n        });\n        \n    }\n    useEffect(()=>{\n        loadChannels();\n        configureSocket();\n        console.log(JSON.stringify(cookies));\n    },[])\n    \n    return (\n        <div className=\"chat-app\">\n            <ChannelList channels={channels} onSelectChannel={handleChannelSelect}/>\n            <MessagesPanel onSendMessage={handleSendMessage} messages={messages} channelId={channel}/>\n        </div>\n    )\n}\n\nexport default ChatScreen;","/home/china/code/Hello-World/client/src/screens/chat/ChannelList.js",[],"/home/china/code/Hello-World/client/src/screens/JoinScreen.js",["77","78"],"/home/china/code/Hello-World/client/src/screens/chat/Message.js",[],"/home/china/code/Hello-World/client/src/screens/LoginScreen.js",["79"],"/home/china/code/Hello-World/client/src/components/NavigationBar.js",["80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":4,"column":12,"nodeType":"87","messageId":"88","endLine":4,"endColumn":16},{"ruleId":"85","severity":1,"message":"89","line":4,"column":18,"nodeType":"87","messageId":"88","endLine":4,"endColumn":25},{"ruleId":"81","replacedBy":"90"},{"ruleId":"83","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":15,"column":26,"nodeType":"94","messageId":"95","endLine":15,"endColumn":28},{"ruleId":"81","replacedBy":"96"},{"ruleId":"83","replacedBy":"97"},{"ruleId":"85","severity":1,"message":"98","line":2,"column":31,"nodeType":"87","messageId":"88","endLine":2,"endColumn":41},{"ruleId":"85","severity":1,"message":"99","line":4,"column":10,"nodeType":"87","messageId":"88","endLine":4,"endColumn":21},{"ruleId":"85","severity":1,"message":"100","line":16,"column":21,"nodeType":"87","messageId":"88","endLine":16,"endColumn":30},{"ruleId":"101","severity":1,"message":"102","line":74,"column":7,"nodeType":"103","endLine":74,"endColumn":9,"suggestions":"104"},{"ruleId":"85","severity":1,"message":"105","line":10,"column":17,"nodeType":"87","messageId":"88","endLine":10,"endColumn":25},{"ruleId":"85","severity":1,"message":"106","line":40,"column":15,"nodeType":"87","messageId":"88","endLine":40,"endColumn":19},{"ruleId":"85","severity":1,"message":"107","line":14,"column":10,"nodeType":"87","messageId":"88","endLine":14,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":9,"column":10,"nodeType":"87","messageId":"88","endLine":9,"endColumn":14},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.",["108"],["109"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["108"],["109"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'setCookie' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookies'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'setError' is assigned a value but never used.","'data' is assigned a value but never used.","'cookies' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},"Update the dependencies array to be: [cookies]",{"range":"113","text":"114"},[2497,2499],"[cookies]"]