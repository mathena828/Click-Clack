[{"/Users/mathena/Downloads/Hello-World/client/src/index.js":"1","/Users/mathena/Downloads/Hello-World/client/src/screens/RegisterScreen.js":"2","/Users/mathena/Downloads/Hello-World/client/src/components/PrivateRoute.js":"3","/Users/mathena/Downloads/Hello-World/client/src/screens/chat/Channel.js":"4","/Users/mathena/Downloads/Hello-World/client/src/App.js":"5","/Users/mathena/Downloads/Hello-World/client/src/screens/chat/ChatScreen.js":"6","/Users/mathena/Downloads/Hello-World/client/src/components/NavigationBar.js":"7","/Users/mathena/Downloads/Hello-World/client/src/reportWebVitals.js":"8","/Users/mathena/Downloads/Hello-World/client/src/screens/ProfileScreen.js":"9","/Users/mathena/Downloads/Hello-World/client/src/screens/LoginScreen.js":"10","/Users/mathena/Downloads/Hello-World/client/src/screens/chat/MessagesPanel.js":"11","/Users/mathena/Downloads/Hello-World/client/src/screens/chat/Message.js":"12","/Users/mathena/Downloads/Hello-World/client/src/screens/HomeScreen.js":"13","/Users/mathena/Downloads/Hello-World/client/src/screens/JoinScreen.js":"14"},{"size":336,"mtime":1612400142344,"results":"15","hashOfConfig":"16"},{"size":2390,"mtime":1612547137519,"results":"17","hashOfConfig":"16"},{"size":370,"mtime":1612400142344,"results":"18","hashOfConfig":"16"},{"size":325,"mtime":1612400237594,"results":"19","hashOfConfig":"16"},{"size":1200,"mtime":1612534047104,"results":"20","hashOfConfig":"16"},{"size":2631,"mtime":1612546081640,"results":"21","hashOfConfig":"16"},{"size":1802,"mtime":1612547734946,"results":"22","hashOfConfig":"16"},{"size":362,"mtime":1612400142345,"results":"23","hashOfConfig":"16"},{"size":277,"mtime":1612541370251,"results":"24","hashOfConfig":"16"},{"size":2157,"mtime":1612547119685,"results":"25","hashOfConfig":"16"},{"size":979,"mtime":1612400237594,"results":"26","hashOfConfig":"16"},{"size":238,"mtime":1612400237594,"results":"27","hashOfConfig":"16"},{"size":125,"mtime":1612400960193,"results":"28","hashOfConfig":"16"},{"size":1906,"mtime":1612549093622,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tzr9k3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mathena/Downloads/Hello-World/client/src/index.js",[],["61","62"],"/Users/mathena/Downloads/Hello-World/client/src/screens/RegisterScreen.js",[],"/Users/mathena/Downloads/Hello-World/client/src/components/PrivateRoute.js",[],"/Users/mathena/Downloads/Hello-World/client/src/screens/chat/Channel.js",[],"/Users/mathena/Downloads/Hello-World/client/src/App.js",[],["63","64"],"/Users/mathena/Downloads/Hello-World/client/src/screens/chat/ChatScreen.js",["65"],"\nimport { useEffect, useState } from \"react\";\nimport ChannelList from './ChannelList'\nimport MessagesPanel from \"./MessagesPanel\";\nimport './chat.scss';\nimport socketClient  from \"socket.io-client\";\nconst SERVER = \"http://localhost:5000\";\nconst socket = socketClient(SERVER);\n\nconst ChatScreen = ()=> {\n    const [channels, setChannels] = useState([{\n        id:1,\n        name: 'test',\n        participants:10\n    }])\n    const [channel, setChannel] = useState(null);\n    const loadChannels = async() =>{\n        fetch(SERVER+'/getChannels').then(async response=>{\n            let data = await response.json();\n            setChannels(data.channels)\n        })\n    }\n    const configureSocket = () =>{\n        \n        console.log(\"socket configs running\");\n        socket.on('connection',()=>{\n            console.log(\"id\",socket.id);\n            if (channel){\n                handleChannelSelect(channel.id);\n            }\n        });\n        socket.on('channels', channels => {\n\n           /*  const channelsList =  [...channels];\n            console.log(\"channels\",channels);\n            console.log(\"channelsList\",channelsList)\n            channelsList.forEach(c => {\n                if (c.id === channel.id) {\n                    c.participants = channel.participants;\n                }\n            }); */\n            setChannels(channels);\n        });\n        socket.on('message',message=>{\n            let channelsList =  [...channels];\n            channelsList.forEach(c => {\n                if (c.id === message.channel_id) {\n                    if (!c.messages) {\n                        c.messages = [message];\n                    } else {\n                        c.messages.push(message);\n                    }\n                }\n            });\n            setChannels(channelsList);\n        })\n    }\n    const handleSendMessage = (channel_id, text) => {\n        console.log(channel_id,text);\n        socket.emit('send-message', { channel_id, text, senderName: socket.id, id: Date.now() });\n    }\n    const handleChannelSelect = (id) =>{\n        console.log(\"Joined channel\", id);\n        let channel = channels.find(c=>{\n            return c.id === id\n        });\n        setChannel(channel);\n        socket.emit('channel-join', id, ack=>{\n        })\n        \n    }\n    useEffect(()=>{\n        loadChannels();\n        configureSocket();\n    },[])\n    \n    return (\n        <div className=\"chat-app\">\n            <ChannelList channels={channels} onSelectChannel={handleChannelSelect}/>\n            <MessagesPanel onSendMessage={handleSendMessage} channel={channel}/>\n        </div>\n    )\n}\n\nexport default ChatScreen;","/Users/mathena/Downloads/Hello-World/client/src/components/NavigationBar.js",["66"],"/Users/mathena/Downloads/Hello-World/client/src/reportWebVitals.js",[],"/Users/mathena/Downloads/Hello-World/client/src/screens/ProfileScreen.js",["67","68"],"/Users/mathena/Downloads/Hello-World/client/src/screens/LoginScreen.js",[],"/Users/mathena/Downloads/Hello-World/client/src/screens/chat/MessagesPanel.js",["69"],"/Users/mathena/Downloads/Hello-World/client/src/screens/chat/Message.js",[],"/Users/mathena/Downloads/Hello-World/client/src/screens/HomeScreen.js",[],"/Users/mathena/Downloads/Hello-World/client/src/screens/JoinScreen.js",["70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":75,"column":7,"nodeType":"80","endLine":75,"endColumn":9,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":9,"column":10,"nodeType":"84","messageId":"85","endLine":9,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":4,"column":12,"nodeType":"84","messageId":"85","endLine":4,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":4,"column":18,"nodeType":"84","messageId":"85","endLine":4,"endColumn":25},{"ruleId":"87","severity":1,"message":"88","line":15,"column":26,"nodeType":"89","messageId":"90","endLine":15,"endColumn":28},{"ruleId":"82","severity":1,"message":"91","line":10,"column":17,"nodeType":"84","messageId":"85","endLine":10,"endColumn":25},{"ruleId":"82","severity":1,"message":"92","line":40,"column":15,"nodeType":"84","messageId":"85","endLine":40,"endColumn":19},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],["93"],["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'configureSocket'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setError' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [configureSocket]",{"range":"98","text":"99"},[2358,2360],"[configureSocket]"]